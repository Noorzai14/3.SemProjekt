@model BarberAkji.Models.BookingViewModel

@{
    ViewData["Title"] = "Opret Booking";
}

<h2>Opret Booking</h2>

@{
    var globalErrors = ViewData.ModelState[""]?.Errors;
    if (!ViewData.ModelState.IsValid && globalErrors != null && globalErrors.Count > 0)
    {
        <script>
            alert('@globalErrors[0].ErrorMessage');
        </script>
    }
}

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="CustomerName"></label>
        <input asp-for="CustomerName" class="form-control" />
        <span asp-validation-for="CustomerName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="BookingDate"></label>
        <input asp-for="BookingDate" type="datetime-local" class="form-control" />
        <span asp-validation-for="BookingDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EmployeeId">Barber</label>
        <select asp-for="EmployeeId" asp-items="Model.Employees" class="form-control"></select>
    </div>

    <div class="form-group">
        <label asp-for="ServiceId">Service</label>
        <select asp-for="ServiceId" asp-items="Model.Services" class="form-control"></select>
    </div>

    <div class="form-group">
        <label asp-for="Note"></label>
        <textarea asp-for="Note" class="form-control"></textarea>
    </div>

    <button type="submit" class="btn btn-primary mt-2">Book</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
